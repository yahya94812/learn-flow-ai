/**
 * JSON Schema for a complete, structured learning module generated by the AI.
 * This object defines the entire content and progression of the study plan.
 *
 * This schema should be provided to the Gemini API in the generationConfig.responseSchema property
 * with responseMimeType set to "application/json".
 */
const learningModuleSchema = {
  type: "object",
  description: "A comprehensive learning module containing study plan, content steps, micro-exercises, and a final quiz.",
  properties: {
    // 1. Topic Identification
    moduleTitle: {
      type: "string",
      description: "The primary title of the generated learning module or topic."
    },
    // 2. The Core Learning Path (Study Plan)
    studyPlan: {
      type: "array",
      description: "The logically reordered or introduced subtopics, forming the step-by-step learning path.",
      items: {
        type: "object",
        properties: {
          subtopicId: {
            type: "string",
            description: "Unique ID for the subtopic, used for tracking and referencing (e.g., 'ST001')."
          },
          subtopicTitle: {
            type: "string",
            description: "The title of the subtopic (e.g., 'Introduction to Cellular Respiration')."
          },
          learningSteps: {
            type: "array",
            description: "A sequence of flashcards that break down the subtopic content.",
            items: {
              type: "object",
              properties: {
                stepOrder: {
                  type: "integer",
                  description: "The order of this flashcard within the subtopic."
                },
                stepContent: {
                  type: "string",
                  description: "The core, concise content for the flashcard (<100 words)."
                },
                visualUrl: {
                  type: "string",
                  description: "A placeholder URL for a relevant diagram or image (e.g., a process diagram)."
                },
                narrationText: {
                  type: "string",
                  description: "The text to be used for audio narration of this step."
                }
              },
              required: ["stepContent", "stepOrder"]
            }
          }
        },
        required: ["subtopicId", "subtopicTitle", "learningSteps"]
      }
    },
    // 3. Micro-Exercises (Inserted after every 3 subtopics)
    microExerciseBlocks: {
      type: "array",
      description: "Short exercise blocks generated after every few subtopics for immediate reinforcement.",
      items: {
        type: "object",
        properties: {
          blockId: {
            type: "string",
            description: "Unique ID for the exercise block (e.g., 'MEB001')."
          },
          reinforcesSubtopics: {
            type: "array",
            description: "List of subtopic IDs (from studyPlan) that this exercise block tests.",
            items: {
              type: "string"
            }
          },
          questions: {
            type: "array",
            description: "The list of questions within this micro-exercise block.",
            items: { "$ref": "#/definitions/Question" }
          }
        },
        required: ["blockId", "questions"]
      }
    },
    // 4. Topic-End Quiz
    topicEndQuiz: {
      type: "array",
      description: "The final, comprehensive quiz testing comprehension across the full module.",
      items: { "$ref": "#/definitions/Question" }
    },
    // 5. Initial Performance/Progress Structure (Updated post-quiz)
    initialPerformanceAnalysis: {
      type: "object",
      description: "Initial structure for performance tracking, to be updated after the final quiz.",
      properties: {
        lastAttemptScore: { type: "integer", default: 0 },
        weakAreaSubtopicIds: {
          type: "array",
          description: "List of subtopic IDs identified as weak areas post-quiz.",
          items: { type: "string" }
        },
        revisionPlanGenerated: {
          type: "boolean",
          default: false,
          description: "Flag indicating if a revision plan has been generated yet."
        }
      }
    }
  },
  required: ["moduleTitle", "studyPlan", "microExerciseBlocks", "topicEndQuiz"],
  
  // Define common structures for reuse (like the Question object)
  definitions: {
    Question: {
      type: "object",
      properties: {
        questionId: {
          type: "string",
          description: "Unique ID for the question."
        },
        questionType: {
          type: "string",
          enum: ["MCQ", "ONE_WORD", "MATCH_THE_FOLLOWING", "LONG_ANSWER"],
          description: "The format of the question."
        },
        questionText: {
          type: "string",
          description: "The content of the question."
        },
        options: {
          type: "array",
          description: "List of choices for MCQ or matching elements for 'Match the Following'.",
          items: { type: "string" }
        },
        correctAnswer: {
          type: "string",
          description: "The correct answer (e.g., 'C' for MCQ, the expected word, or a key for matching)."
        }
      },
      required: ["questionId", "questionType", "questionText", "correctAnswer"]
    }
  }
};
